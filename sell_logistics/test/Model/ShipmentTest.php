<?php
/**
 * ShipmentTest
 *
 * PHP version 5
 *
 * @category Class
 * @package  Nopolabs\EBay\Sell\Logistics
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Logistics API
 *
 * The Logistics API resources offer the following capabilities: shipping_quote &ndash; Consolidates into a list a set of live shipping rates, or quotes, from which you can select a rate to ship a package. shipment &ndash; Creates a &quot;shipment&quot; for the selected shipping rate. Call createShippingQuote to get a list of live shipping rates. The rates returned are all valid for a specific time window and all quoted prices are at eBay-negotiated rates. Select one of the live rates and using its associated rateId, create a &quot;shipment&quot; for the package by calling createFromShippingQuote. Creating a shipment completes an agreement, and the base service and addition shipping options are totaled into the totalShippingCost. This action also generates a shipping label that you can use to ship the package. Important! Sellers must set up a payment method via their eBay account before they can use the methods in this API to create a shipment and the associated shipping label.
 *
 * OpenAPI spec version: v1_beta.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.3.1
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the model.
 */

namespace Nopolabs\EBay\Sell\Logistics;

/**
 * ShipmentTest Class Doc Comment
 *
 * @category    Class */
// * @description This complex type defines a shipment for a specific package (for example, a box or letter). Shipments are always linked to a purchased shipping label.
/**
 * @package     Nopolabs\EBay\Sell\Logistics
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class ShipmentTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test "Shipment"
     */
    public function testShipment()
    {
    }

    /**
     * Test attribute "cancellation"
     */
    public function testPropertyCancellation()
    {
    }

    /**
     * Test attribute "creation_date"
     */
    public function testPropertyCreationDate()
    {
    }

    /**
     * Test attribute "label_custom_message"
     */
    public function testPropertyLabelCustomMessage()
    {
    }

    /**
     * Test attribute "label_download_url"
     */
    public function testPropertyLabelDownloadUrl()
    {
    }

    /**
     * Test attribute "label_size"
     */
    public function testPropertyLabelSize()
    {
    }

    /**
     * Test attribute "orders"
     */
    public function testPropertyOrders()
    {
    }

    /**
     * Test attribute "package_specification"
     */
    public function testPropertyPackageSpecification()
    {
    }

    /**
     * Test attribute "rate"
     */
    public function testPropertyRate()
    {
    }

    /**
     * Test attribute "return_to"
     */
    public function testPropertyReturnTo()
    {
    }

    /**
     * Test attribute "ship_from"
     */
    public function testPropertyShipFrom()
    {
    }

    /**
     * Test attribute "shipment_id"
     */
    public function testPropertyShipmentId()
    {
    }

    /**
     * Test attribute "shipment_tracking_number"
     */
    public function testPropertyShipmentTrackingNumber()
    {
    }

    /**
     * Test attribute "ship_to"
     */
    public function testPropertyShipTo()
    {
    }
}
